package com.spring.henallux.controller;

import java.util.ArrayList;
import java.util.Locale;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.SessionAttributes;

import com.spring.henallux.dataAccess.dao.EquivalentCategoryDAO;
import com.spring.henallux.dataAccess.dao.OrderShopDAO;
import com.spring.henallux.model.Client;
import com.spring.henallux.model.EquivalentCategory;
import com.spring.henallux.model.OrderShop;
import com.spring.henallux.service.CategoriesService;
import com.spring.henallux.sessionAttributeModel.Categories;
import com.spring.henallux.sessionAttributeModel.ClientAndBasket;
import com.spring.henallux.util.Constant;

@Controller
@RequestMapping(value="/accountOrders")
@SessionAttributes({ Constant.ORDERSHOP, Constant.CONNECTEDCLIENT, Constant.CLIENT, Constant.CLIENTBASKET, 
	Constant.PROCESSCOMMAND,Constant.CATEGORIES})
public class AccountOrdersController {
	
	@Autowired
	private OrderShopDAO orderShopDAO;
	
	@Autowired
	private MessageSource titleMessage;
	
	@Autowired
	private CategoriesService categoriesService;
	
	@RequestMapping(method=RequestMethod.GET)
	public String getOrders(Model model, Locale locale, 
			@ModelAttribute(value=Constant.CLIENT)ClientAndBasket client,
			@ModelAttribute(value="orderShopSelection")OrderShop orderSelection,
			@ModelAttribute(value=Constant.CATEGORIES)Categories categories){
		
		categories.setCategories(categoriesService.getCategoriesByLanguage(locale.getLanguage()));
		
		ArrayList<OrderShop> orderShop = new ArrayList<OrderShop>();
		orderShop = orderShopDAO.findOrderByIdClient(client.getIdClient());
		
		model.addAttribute(Constant.CLIENT, client);
		model.addAttribute(Constant.ORDERS, orderShop);
		model.addAttribute("orderShopSelection", orderSelection);
		model.addAttribute("titlePage", titleMessage.getMessage("accountTitlePage", null, locale));
		categories.setCategories(setCategory(locale));
		model.addAttribute("categories", categories);
		return "integrated:accountOrders";
}
	
	
	
}
